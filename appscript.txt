// doPost function runs when the web app sends data (a POST request) to the script.
// This is the main router that directs requests to the correct handler function.
function doPost(e) {
  try {
    var data = JSON.parse(e.postData.contents);
    var action = data.action || 'sendEmail'; // Default action

    switch (action) {
      case 'sendEmail':
        return handleSendEmail(data);
      case 'fetchInbox':
        return handleFetchInbox(data);
      case 'getPreview':
        return handleGetPreview(data);
      default:
        throw new Error("Invalid action specified.");
    }
  } catch (error) {
    // --- Error Handling ---
    Logger.log(error.toString());
    return ContentService.createTextOutput(JSON.stringify({
      result: 'error',
      message: error.toString()
    })).setMimeType(ContentService.MimeType.JSON);
  }
}

// doGet function provides a user-friendly confirmation that the script is active.
function doGet(e) {
  return HtmlService.createHtmlOutput(
    "<h1>HB Mailing System Backend</h1><p>This script is active and ready to receive data from the web application.</p>"
  ).setXFrameOptionsMode(HtmlService.XFrameOptionsMode.ALLOWALL);
}

// --- FIRM DATA (Centralized) ---
var FIRMS_DATA = {
  'HC': {
    'name': 'Hreenkar Creation',
    'gstin': '30AACPB7378Q1ZH',
    'address': 'COSMOS CENTER SHOP NO 32 GROUND FLOOR MOROD MAPUSA Goa 403507',
    'mobile': '9422593814 / 8888099776'
  },
  'KA': {
    'name': 'Kambeshwar Agencies',
    'address': 'Upper Ground Floor, Shop No. 6, Essar Trade Centre, Shashikant Narvekar Road, Morod, Mapusa, North Goa, Goa, 403507',
    'mobile': '9422593814 / 8888099776'
  }
};

// --- HANDLER for Sending Email ---
function handleSendEmail(data) {
  var selectedFirm = FIRMS_DATA[data.firmKey] || FIRMS_DATA['HC'];
  var attachments = processAttachments(data.attachments);
  var htmlBody = generateHtmlEmail(selectedFirm, data.body, data.attachments);

  var mailOptions = {
    to: data.to,
    cc: data.cc,
    bcc: data.bcc,
    subject: data.subject,
    htmlBody: htmlBody,
    attachments: attachments
  };

  GmailApp.sendEmail(data.to, data.subject, "This email requires an HTML-compatible viewer.", mailOptions);

  return ContentService.createTextOutput(JSON.stringify({
    result: 'success',
    message: 'Email sent successfully!'
  })).setMimeType(ContentService.MimeType.JSON);
}

// --- HANDLER for Fetching Inbox (with Backend Search) ---
function handleFetchInbox(data) {
  var searchTerm = data.searchTerm || '';
  var searchType = data.searchType || 'subject';
  
  var query = 'in:inbox';
  if (searchTerm) {
    // Sanitize searchTerm to prevent query injection issues, though less critical in Apps Script.
    var sanitizedSearchTerm = searchTerm.replace(/"/g, '\\"');
    query = searchType + ':"' + sanitizedSearchTerm + '" in:inbox';
  }

  var threads = GmailApp.search(query, 0, 10);
  var emails = [];

  for (var i = 0; i < threads.length; i++) {
    var messages = threads[i].getMessages();
    if (messages && messages.length > 0) {
      // Use the most recent message in the thread for display
      var message = messages[messages.length - 1];
      if (message) {
        emails.push({
          id: message.getId() || ('thread-' + i),
          from: message.getFrom() || '[No Sender]',
          subject: message.getSubject() || '[No Subject]',
          date: message.getDate() ? message.getDate().toISOString() : new Date().toISOString(),
          body: message.getPlainBody() ? message.getPlainBody().substring(0, 500) : '[No Body]'
        });
      }
    }
  }

  return ContentService.createTextOutput(JSON.stringify({
    result: 'success',
    emails: emails
  })).setMimeType(ContentService.MimeType.JSON);
}


// --- HANDLER for Generating Preview ---
function handleGetPreview(data) {
  var selectedFirm = FIRMS_DATA[data.firmKey] || FIRMS_DATA['HC'];
  var html = generateHtmlEmail(selectedFirm, data.body, data.attachments);
  
  return ContentService.createTextOutput(JSON.stringify({
    result: 'success',
    html: html
  })).setMimeType(ContentService.MimeType.JSON);
}


// --- HELPER for Processing Attachments ---
function processAttachments(attachmentsData) {
  var attachments = [];
  if (attachmentsData && attachmentsData.length > 0) {
    for (var i = 0; i < attachmentsData.length; i++) {
      var attachment = attachmentsData[i];
      var decodedData = Utilities.base64Decode(attachment.data);
      var blob = Utilities.newBlob(decodedData, attachment.mimeType, attachment.filename);
      attachments.push(blob);
    }
  }
  return attachments;
}

// --- HELPER for Generating HTML Email Body ---
function generateHtmlEmail(selectedFirm, bodyHtml, attachmentsData) {
  // Attachment HTML cards generation
  var attachmentHtml = '';
  if (attachmentsData && attachmentsData.length > 0) {
     attachmentHtml += '<div style="font-size: 13px; color: #888888; letter-spacing: 2px; text-transform: uppercase; margin: 35px 0 20px 0; text-align: center; font-weight: bold;">◆ Enclosed Documents ◆</div>';
     attachmentsData.forEach(function(file) {
         var fileSize = 'N/A';
         try {
           if (file.data) {
              fileSize = (Utilities.base64Decode(file.data).length / 1024).toFixed(2) + ' KB';
           }
         } catch(e) {
            Logger.log('Could not decode attachment data for preview: ' + file.filename);
         }
         attachmentHtml += '<div style="background-color: #1a1a1a; border: 1px solid #d4af37; border-radius: 4px; padding: 25px 30px; margin-bottom: 15px;">' +
                             '<div style="font-size: 12px; color: #d4af37; letter-spacing: 1px; text-transform: uppercase; margin-bottom: 10px; font-weight: bold;">' + (file.mimeType || 'attachment').toUpperCase() + '</div>' +
                             '<div style="font-size: 18px; color: #ffffff; font-weight: bold; font-family: \'Courier New\', monospace; margin-bottom: 8px; word-break: break-all;">' + (file.filename || 'Untitled') + '</div>' +
                             '<div style="font-size: 14px; color: #999999;">' + fileSize + '</div>' +
                           '</div>';
     });
  }

  // Main HTML template
  var fullHtml = '<!DOCTYPE html><html><head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"></head>' +
    '<body style="margin: 0; padding: 0; box-sizing: border-box; font-family: \'Georgia\', \'Times New Roman\', serif; line-height: 1.6; background-color: #f5f5f5; padding: 20px 0;">' +
      '<table align="center" border="0" cellpadding="0" cellspacing="0" width="100%" style="max-width: 900px; margin: 0 auto; background-color: #ffffff; border: 1px solid #e0e0e0;">' +
        '<tr><td style="height: 4px; background-color: #d4af37;"></td></tr>' +
        '<tr><td style="background-color: #1a1a1a; padding: 50px 40px; text-align: center; border-bottom: 2px solid #d4af37;">' +
          '<div style="font-size: 48px; font-weight: 300; color: #ffffff; letter-spacing: 8px; margin-bottom: 20px; text-transform: uppercase; font-family: \'Georgia\', serif;">' + selectedFirm.name.toUpperCase() + '</div>' +
          '<div style="width: 120px; height: 1px; background-color: #d4af37; margin: 20px auto;"></div>' +
        '</td></tr>' +
        '<tr><td style="padding: 50px 60px; color: #333333;">' +
          '<div style="font-size: 16px; line-height: 1.8; color: #333333; margin-bottom: 20px; text-align: left;">' + bodyHtml + '</div>' +
          attachmentHtml +
          '<div style="margin-top: 40px; padding-top: 25px; border-top: 1px solid #e0e0e0; text-align: left;">' +
            '<div style="text-align: center; color: #d4af37; margin-bottom: 20px; font-size: 16px;">◆</div>' +
            '<div style="font-size: 15px; color: #666666; margin-bottom: 15px; font-style: italic;">With warm regards,</div>' +
            '<div style="font-size: 18px; color: #1a1a1a; font-weight: bold; letter-spacing: 2px; margin-bottom: 10px; text-transform: uppercase;">' + selectedFirm.name + '</div>' +
            '<div style="font-size: 14px; color: #666666; line-height: 1.6; margin-bottom: 5px;">' + selectedFirm.address + '</div>' +
            '<div style="font-size: 14px; color: #666666; line-height: 1.6; margin-bottom: 5px;">Mobile: ' + selectedFirm.mobile + '</div>' +
            (selectedFirm.gstin ? '<div style="font-size: 14px; color: #666666; line-height: 1.6; margin-bottom: 5px;">GSTIN: ' + selectedFirm.gstin + '</div>' : '') +
          '</div>' +
        '</td></tr>' +
        '<tr><td style="background-color: #f5f5f5; padding: 25px; border-top: 2px solid #d4af37; text-align: center; font-size: 12px; color: #999999; letter-spacing: 1px;">' +
          '<div style="margin-bottom: 12px; text-transform: uppercase; font-weight: bold;">Professional Email System</div>' +
          '<div style="font-size: 11px; color: #aaaaaa;">Developed by <span style="color: #666666; font-weight: bold;">Hemant Borana</span></div>' +
        '</td></tr>' +
      '</table>' +
    '</body></html>';

  return fullHtml;
}